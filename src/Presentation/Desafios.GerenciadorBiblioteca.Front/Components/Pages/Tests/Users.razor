@page "/users"
@using Desafios.GerenciadorBiblioteca.Domain.Entities
@using Desafios.GerenciadorBiblioteca.Service.Services.Interfaces
@rendermode InteractiveServer
@inject IUserService service;

<PageTitle>Usuários</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Usuários</MudText>
<MudText Class="mb-8">Listagem dos Usuários.</MudText>

@if (users == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="users" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Library, object>(x=>x.Id)">ID</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<User, object>(x=> x.Name)">Nome</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<User, object>(x=> x.Phone)">Telefone</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<User, object>(x=> x.Email)">Email</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ID">@context.Id</MudTd>
            <MudTd DataLabel="Nome">@context.Name</MudTd>
            <MudTd DataLabel="CNPJ">@context.Phone</MudTd>
            <MudTd DataLabel="Telefone">@context.Email</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10, 20}" />
        </PagerContent>
    </MudTable>
}

@code {
    private IEnumerable<User> users;

    protected override async Task OnInitializedAsync()
    {
        users = await service.GetAllAsync();
    }
}
